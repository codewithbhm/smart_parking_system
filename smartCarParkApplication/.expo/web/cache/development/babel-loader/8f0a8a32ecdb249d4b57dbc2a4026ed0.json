{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGooglePlacesAutocomplete = require(\"react-native-google-places-autocomplete\");\n\nvar _jsxFileName = \"/Users/kuzeykose/Desktop/Smart Parking Systems/Application/smartCarParkApplication/src/components/Search/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar bilgiUniversitySantral = {\n  description: 'Bilgi University - Santral',\n  geometry: {\n    location: {\n      lat: 41.0657524,\n      lng: 28.946341\n    }\n  },\n  id: 'BilgiUniversitySantralCarPark'\n};\nvar bilgiUniversityDolapdere = {\n  description: 'Bilgi University - Dolapdere',\n  geometry: {\n    location: {\n      lat: 41.038853,\n      lng: 28.9737589999999\n    }\n  },\n  id: 'BilgiUniversityDolapdereCarPark'\n};\n\nvar Search = function (_Component) {\n  (0, _inherits2.default)(Search, _Component);\n\n  var _super = _createSuper(Search);\n\n  function Search() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      searchFocused: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onLocationSelected = this.props.onLocationSelected;\n      var searchFocused = this.props.searchFocused;\n      return _react.default.createElement(_reactNativeGooglePlacesAutocomplete.GooglePlacesAutocomplete, {\n        placeholder: \"Where do you want to park?\",\n        placeholderTextColor: \"#333\",\n        onPress: onLocationSelected,\n        query: {\n          key: \"AIzaSyAbE_uxNFwH3bHysGhNhWVhrGTHpsDHpxc\",\n          language: 'en',\n          types: 'Bilgi'\n        },\n        textInputProps: {\n          onFocus: function onFocus() {\n            _this2.setState({\n              searchFocused: true\n            });\n          },\n          onBlur: function onBlur() {\n            _this2.setState({\n              searchFocused: false\n            });\n          },\n          autoCapitalize: \"none\",\n          autoCorrect: false\n        },\n        predefinedPlaces: [bilgiUniversitySantral, bilgiUniversityDolapdere],\n        listViewDisplayed: searchFocused,\n        fetchDetails: true,\n        enablePoweredByContainer: false,\n        styles: {\n          container: {\n            position: 'absolute',\n            top: _reactNative.Platform.select({\n              ios: 60\n            }),\n            width: '100%'\n          },\n          textInputContainer: {\n            flex: 1,\n            backgroundColor: 'transparent',\n            height: 54,\n            marginHorizontal: 20,\n            borderTopWidth: 0,\n            borderBottomWidth: 0\n          },\n          textInput: {\n            height: 54,\n            margin: 0,\n            borderRadius: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            paddingLeft: 20,\n            paddingRight: 20,\n            padding: 0,\n            marginTop: 0,\n            marginBottom: 0,\n            marginLeft: 0,\n            marginRight: 0,\n            elevation: 5,\n            shadowColor: '#000',\n            shadowOpacity: 0.1,\n            shadowOffset: {\n              x: 0,\n              y: 0\n            },\n            shadowRadius: 15,\n            borderWidth: 1,\n            borderColor: '#DDD',\n            fontSize: 18\n          },\n          listView: {\n            borderWidth: 1,\n            borderColor: '#DDD',\n            backgroundColor: '#FFF',\n            marginHorizontal: 20,\n            elevation: 5,\n            shadowColor: '#000',\n            shadowOpacity: 0.1,\n            shadowOffset: {\n              x: 0,\n              y: 0\n            },\n            shadowRadius: 15,\n            marginTop: 10\n          },\n          description: {\n            fontSize: 16\n          },\n          row: {\n            padding: 20,\n            height: 58\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return Search;\n}(_react.Component);\n\nexports.default = Search;","map":{"version":3,"sources":["/Users/kuzeykose/Desktop/Smart Parking Systems/Application/smartCarParkApplication/src/components/Search/index.js"],"names":["bilgiUniversitySantral","description","geometry","location","lat","lng","id","bilgiUniversityDolapdere","Search","state","searchFocused","onLocationSelected","props","key","language","types","onFocus","setState","onBlur","autoCapitalize","autoCorrect","container","position","top","Platform","select","ios","width","textInputContainer","flex","backgroundColor","height","marginHorizontal","borderTopWidth","borderBottomWidth","textInput","margin","borderRadius","paddingTop","paddingBottom","paddingLeft","paddingRight","padding","marginTop","marginBottom","marginLeft","marginRight","elevation","shadowColor","shadowOpacity","shadowOffset","x","y","shadowRadius","borderWidth","borderColor","fontSize","listView","row","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Platform } from 'react-native'\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete'\n\nconst bilgiUniversitySantral = {\n  description: 'Bilgi University - Santral',\n  geometry: { location: { lat: 41.0657524, lng: 28.946341 } },\n  id: 'BilgiUniversitySantralCarPark'\n};\nconst bilgiUniversityDolapdere = {\n  description: 'Bilgi University - Dolapdere',\n  geometry: { location: { lat: 41.038853, lng: 28.9737589999999 } },\n  id: 'BilgiUniversityDolapdereCarPark'\n};\n\nexport default class Search extends Component {\n  state = {\n    searchFocused: false\n  }\n\n  render() {\n    const { onLocationSelected } = this.props\n    const { searchFocused } = this.props\n\n    return (\n      <GooglePlacesAutocomplete\n        placeholder=\"Where do you want to park?\"\n        placeholderTextColor=\"#333\"\n        onPress={onLocationSelected}\n        query={{\n          key: \"AIzaSyAbE_uxNFwH3bHysGhNhWVhrGTHpsDHpxc\",\n          language: 'en',\n          types: 'Bilgi'\n        }}\n        textInputProps={{\n          onFocus: () => { this.setState({ searchFocused: true }) },\n          onBlur: () => { this.setState({ searchFocused: false }) },\n          autoCapitalize: \"none\",\n          autoCorrect: false\n        }}\n        predefinedPlaces={[bilgiUniversitySantral, bilgiUniversityDolapdere]}\n        listViewDisplayed={searchFocused}\n        fetchDetails\n        enablePoweredByContainer={false}\n        styles={{\n          container: {\n            position: 'absolute',\n            top: Platform.select({ ios: 60 }),\n            width: '100%'\n          },\n          textInputContainer: {\n            flex: 1,\n            backgroundColor: 'transparent',\n            height: 54,\n            marginHorizontal: 20,\n            borderTopWidth: 0,\n            borderBottomWidth: 0\n          },\n          textInput: {\n            height: 54,\n            margin: 0,\n            borderRadius: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            paddingLeft: 20,\n            paddingRight: 20,\n            padding: 0,\n            marginTop: 0,\n            marginBottom: 0,\n            marginLeft: 0,\n            marginRight: 0,\n            elevation: 5,\n            shadowColor: '#000',\n            shadowOpacity: 0.1,\n            shadowOffset: { x: 0, y: 0 },\n            shadowRadius: 15,\n            borderWidth: 1,\n            borderColor: '#DDD',\n            fontSize: 18\n          },\n          listView: {\n            borderWidth: 1,\n            borderColor: '#DDD',\n            backgroundColor: '#FFF',\n            marginHorizontal: 20,\n            elevation: 5,\n            shadowColor: '#000',\n            shadowOpacity: 0.1,\n            shadowOffset: { x: 0, y: 0 },\n            shadowRadius: 15,\n            marginTop: 10,\n          },\n          description: {\n            fontSize: 16\n          },\n          row: {\n            padding: 20,\n            height: 58\n          }\n        }}\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}