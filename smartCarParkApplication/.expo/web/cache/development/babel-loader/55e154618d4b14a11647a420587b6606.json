{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _datetimepicker = _interopRequireDefault(require(\"@react-native-community/datetimepicker\"));\n\nvar _FirebaseProvider = require(\"../../provider/FirebaseProvider\");\n\nvar _style = require(\"./style\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/kuzeykose/Desktop/Smart Parking Systems/Application/smartCarParkApplication/src/components/Details/index.js\";\n\nvar Details = function Details(props) {\n  var firebaseContext = (0, _react.useContext)(_FirebaseProvider.FirebaseContext);\n  var selectedParkId = props.parkId;\n  return _react.default.createElement(_style.Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_style.CheckContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_style.CheckView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_style.DateTimeSelectText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Select parking date!\"), _react.default.createElement(_datetimepicker.default, {\n    testID: \"dateTimePicker\",\n    value: firebaseContext.checkInDate,\n    mode: 'date',\n    is24Hour: true,\n    display: \"default\",\n    onChange: firebaseContext.onChangeCheckInDate,\n    style: {\n      width: 120\n    },\n    minimumDate: new Date(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_style.CheckView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_style.DateTimeSelectText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Select Check In Time\"), _react.default.createElement(_datetimepicker.default, {\n    value: firebaseContext.checkInTime,\n    mode: \"time\",\n    is24Hour: true,\n    minuteInterval: 15,\n    display: \"inline\",\n    onChange: firebaseContext.onChangeCheckInTime,\n    locale: \"tr\",\n    style: {\n      width: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_style.CheckView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_style.DateTimeSelectText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Select Check Out Time\"), _react.default.createElement(_datetimepicker.default, {\n    testID: \"dateTimePicker\",\n    value: firebaseContext.checkOutTime,\n    mode: 'time',\n    is24Hour: true,\n    display: \"inline\",\n    minuteInterval: 15,\n    onChange: firebaseContext.onChangeCheckOutTime,\n    locale: \"tr\",\n    style: {\n      width: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_style.RequestButton, {\n    onPress: function onPress() {\n      firebaseContext.writeFirebaseUserBook(selectedParkId);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_style.RequestButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Book\")));\n};\n\nvar _default = Details;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kuzeykose/Desktop/Smart Parking Systems/Application/smartCarParkApplication/src/components/Details/index.js"],"names":["Details","props","firebaseContext","FirebaseContext","selectedParkId","parkId","checkInDate","onChangeCheckInDate","width","Date","checkInTime","onChangeCheckInTime","checkOutTime","onChangeCheckOutTime","writeFirebaseUserBook"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;AASA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzB,MAAMC,eAAe,GAAG,uBAAWC,iCAAX,CAAxB;AACA,MAAMC,cAAc,GAAGH,KAAK,CAACI,MAA7B;AAEA,SACE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,6BAAC,uBAAD;AACE,IAAA,MAAM,EAAC,gBADT;AAEE,IAAA,KAAK,EAAEH,eAAe,CAACI,WAFzB;AAGE,IAAA,IAAI,EAAE,MAHR;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,OAAO,EAAC,SALV;AAME,IAAA,QAAQ,EAAEJ,eAAe,CAACK,mBAN5B;AAOE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAPT;AAQE,IAAA,WAAW,EAAE,IAAIC,IAAJ,EARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAcE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,6BAAC,uBAAD;AACE,IAAA,KAAK,EAAEP,eAAe,CAACQ,WADzB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,cAAc,EAAE,EAJlB;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,QAAQ,EAAER,eAAe,CAACS,mBAN5B;AAOE,IAAA,MAAM,EAAC,IAPT;AAQE,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAK,EAAE;AAAT,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,EA4BE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,6BAAC,uBAAD;AACE,IAAA,MAAM,EAAC,gBADT;AAEE,IAAA,KAAK,EAAEN,eAAe,CAACU,YAFzB;AAGE,IAAA,IAAI,EAAE,MAHR;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,cAAc,EAAE,EANlB;AAOE,IAAA,QAAQ,EAAEV,eAAe,CAACW,oBAP5B;AAQE,IAAA,MAAM,EAAC,IART;AASE,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA5BF,CADF,EA6CE,6BAAC,oBAAD;AAAe,IAAA,OAAO,EAAE,mBAAM;AAC5BN,MAAAA,eAAe,CAACY,qBAAhB,CAAsCV,cAAtC;AAGD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,6BAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CA7CF,CADF;AAuDD,CA3DD;;eA6DeJ,O","sourcesContent":["import React, { useContext } from 'react'\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { FirebaseContext } from '../../provider/FirebaseProvider'\n\nimport {\n  Container,\n  RequestButton,\n  RequestButtonText,\n  DateTimeSelectText,\n  CheckView,\n  CheckContainer\n} from './style'\n\nconst Details = (props) => {\n  const firebaseContext = useContext(FirebaseContext);\n  const selectedParkId = props.parkId;\n\n  return (\n    <Container>\n      <CheckContainer>\n        <CheckView>\n          <DateTimeSelectText>Select parking date!</DateTimeSelectText>\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={firebaseContext.checkInDate}\n            mode={'date'}\n            is24Hour={true}\n            display=\"default\"\n            onChange={firebaseContext.onChangeCheckInDate}\n            style={{ width: 120 }}\n            minimumDate={new Date()}\n          />\n        </CheckView>\n        <CheckView >\n          <DateTimeSelectText>Select Check In Time</DateTimeSelectText>\n          <DateTimePicker\n            value={firebaseContext.checkInTime}\n            mode=\"time\"\n            is24Hour={true}\n            minuteInterval={15}\n            display=\"inline\"\n            onChange={firebaseContext.onChangeCheckInTime}\n            locale=\"tr\"\n            style={{ width: 100 }}\n          />\n        </CheckView>\n\n        <CheckView>\n          <DateTimeSelectText>Select Check Out Time</DateTimeSelectText>\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={firebaseContext.checkOutTime}\n            mode={'time'}\n            is24Hour={true}\n            display=\"inline\"\n            minuteInterval={15}\n            onChange={firebaseContext.onChangeCheckOutTime}\n            locale=\"tr\"\n            style={{ width: 100 }}\n          />\n        </CheckView>\n      </CheckContainer>\n\n      <RequestButton onPress={() => {\n        firebaseContext.writeFirebaseUserBook(selectedParkId)\n\n\n      }}>\n        <RequestButtonText>Book</RequestButtonText>\n      </RequestButton>\n    </Container >\n  )\n}\n\nexport default Details"]},"metadata":{},"sourceType":"script"}