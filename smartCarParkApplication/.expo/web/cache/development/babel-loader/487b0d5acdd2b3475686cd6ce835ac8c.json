{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _geolocation = _interopRequireDefault(require(\"@react-native-community/geolocation\"));\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _Search = _interopRequireDefault(require(\"../Search\"));\n\nvar _Directions = _interopRequireDefault(require(\"../Directions\"));\n\nvar _Details = _interopRequireDefault(require(\"../Details\"));\n\nvar _back = _interopRequireDefault(require(\"../../assets/back.png\"));\n\nvar _style = require(\"./style\");\n\nvar _jsxFileName = \"/Users/kuzeykose/Desktop/Smart Parking Systems/Application/smartCarParkApplication/src/components/Map/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Map = function (_Component) {\n  (0, _inherits2.default)(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      region: null,\n      destination: null,\n      duration: null,\n      carParkId: null\n    };\n\n    _this.handleBack = function () {\n      _this.setState({\n        destination: null\n      });\n    };\n\n    _this.bookedArea = function () {\n      alert(\"Booked!\");\n\n      _this.setState({\n        destination: null\n      });\n    };\n\n    _this.bookedAreaNotAvailable = function () {\n      alert(\"Not Available!\");\n    };\n\n    _this.handleLocationSelected = function (data, _ref) {\n      var geometry = _ref.geometry;\n      var _geometry$location = geometry.location,\n          latitude = _geometry$location.lat,\n          longitude = _geometry$location.lng;\n\n      _this.setState({\n        destination: {\n          latitude: latitude,\n          longitude: longitude,\n          title: data.description,\n          parkId: data.id\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regenerator.default.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _geolocation.default.getCurrentPosition(function (_ref2) {\n                var _ref2$coords = _ref2.coords,\n                    latitude = _ref2$coords.latitude,\n                    longitude = _ref2$coords.longitude;\n\n                _this2.setState({\n                  region: {\n                    latitude: latitude,\n                    longitude: longitude,\n                    latitudeDelta: 0.003,\n                    longitudeDelta: 0.004\n                  }\n                });\n              }, function () {}, {\n                timeout: 2000,\n                enableHighAccuracy: true,\n                maximumAge: 1000\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          region = _this$state.region,\n          destination = _this$state.destination,\n          duration = _this$state.duration;\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeMaps.default, {\n        provider: _reactNativeMaps.PROVIDER_DEFAULT,\n        style: {\n          flex: 1,\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        initialRegion: region,\n        showsUserLocation: true,\n        loadingEnabled: true,\n        ref: function ref(el) {\n          return _this3.mapView = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, destination && _react.default.createElement(_react.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_Directions.default, {\n        origin: region,\n        destination: destination,\n        onReady: function onReady(result) {\n          _this3.setState({\n            duration: Math.floor(result.duration)\n          });\n\n          _this3.mapView.fitToCoordinates(result.coordinates, {\n            edgePadding: {\n              right: (0, _utils.getPixelSize)(50),\n              left: (0, _utils.getPixelSize)(50),\n              top: (0, _utils.getPixelSize)(50),\n              bottom: (0, _utils.getPixelSize)(350)\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), _react.default.createElement(_reactNativeMaps.Marker, {\n        coordinate: destination,\n        anchor: {\n          x: 0,\n          y: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_style.LocationBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_style.LocationText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, destination.title))), _react.default.createElement(_reactNativeMaps.Marker, {\n        coordinate: region,\n        anchor: {\n          x: 0,\n          y: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_style.LocationBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_style.LocationTimeBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_style.LocationTimeText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, duration), _react.default.createElement(_style.LocationTimeTextSmall, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"MIN\")), _react.default.createElement(_style.LocationText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, \"User Name\"))))), destination ? _react.default.createElement(_react.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_style.Back, {\n        onPress: this.handleBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: _back.default,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      })), _react.default.createElement(_Details.default, {\n        parkName: destination.title,\n        parkId: destination.parkId,\n        bookedArea: this.bookedArea,\n        bookedAreaNotAvailable: this.bookedAreaNotAvailable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      })) : _react.default.createElement(_Search.default, {\n        onLocationSelected: this.handleLocationSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n  return Map;\n}(_react.Component);\n\nexports.default = Map;\n;","map":{"version":3,"sources":["/Users/kuzeykose/Desktop/Smart Parking Systems/Application/smartCarParkApplication/src/components/Map/index.js"],"names":["Map","state","region","destination","duration","carParkId","handleBack","setState","bookedArea","alert","bookedAreaNotAvailable","handleLocationSelected","data","geometry","location","latitude","lat","longitude","lng","title","description","parkId","id","Geolocation","getCurrentPosition","coords","latitudeDelta","longitudeDelta","timeout","enableHighAccuracy","maximumAge","flex","PROVIDER_DEFAULT","justifyContent","alignItems","el","mapView","result","Math","floor","fitToCoordinates","coordinates","edgePadding","right","left","top","bottom","x","y","backImage","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component, Fragment } from 'react';\nimport { View, Image } from 'react-native';\n\nimport Geolocation from '@react-native-community/geolocation';\nimport MapView, { Marker, PROVIDER_DEFAULT, PROVIDER_GOOGLE } from 'react-native-maps'; //PROVIDER_DEFAULT uses Apple's map\n\nimport { getPixelSize } from '../../utils'\nimport Search from '../Search'\nimport Directions from '../Directions'\nimport Details from '../Details'\n\nimport backImage from \"../../assets/back.png\";\n\nimport {\n  Back,\n  LocationBox,\n  LocationText,\n  LocationTimeBox,\n  LocationTimeTextSmall,\n  LocationTimeText\n\n} from './style'\n\nexport default class Map extends Component {\n  state = {\n    region: null,\n    destination: null,\n    duration: null,\n    carParkId: null\n  }\n\n  async componentDidMount() {\n    Geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        this.setState({\n          region: {\n            latitude,\n            longitude,\n            latitudeDelta: 0.003,\n            longitudeDelta: 0.004\n          }\n        })\n      },\n      () => { },\n      {\n        timeout: 2000,\n        enableHighAccuracy: true,\n        maximumAge: 1000\n      }\n    )\n  }\n\n  handleBack = () => {\n    this.setState({ destination: null })\n  }\n\n  bookedArea = () => {\n    alert(\"Booked!\")\n    this.setState({ destination: null })\n  }\n\n  bookedAreaNotAvailable = () => {\n    alert(\"Not Available!\")\n\n  }\n\n  handleLocationSelected = (data, { geometry }) => {\n    const { location: { lat: latitude, lng: longitude } } = geometry\n    this.setState({\n      destination: {\n        latitude,\n        longitude,\n        title: data.description,\n        parkId: data.id\n      }\n    })\n  }\n\n  render() {\n    const { region, destination, duration } = this.state\n    return (\n      <View style={{ flex: 1 }}>\n        <MapView\n          provider={PROVIDER_DEFAULT}\n          style={{ flex: 1, justifyContent: 'space-between', alignItems: 'center' }}\n          initialRegion={region}\n          showsUserLocation={true}\n          loadingEnabled\n          ref={el => this.mapView = el}\n        >\n          {destination && (\n            <Fragment>\n              < Directions\n                origin={region}\n                destination={destination}\n                onReady={(result) => {\n                  this.setState({ duration: Math.floor(result.duration) })\n                  this.mapView.fitToCoordinates(result.coordinates, {\n                    edgePadding: {\n                      right: getPixelSize(50),\n                      left: getPixelSize(50),\n                      top: getPixelSize(50),\n                      bottom: getPixelSize(350)\n                    }\n                  })\n                }}\n              />\n              <Marker\n                coordinate={destination}\n                anchor={{ x: 0, y: 0 }} >\n                <LocationBox>\n                  <LocationText>{destination.title}</LocationText>\n                </LocationBox>\n              </Marker>\n\n              <Marker\n                coordinate={region}\n                anchor={{ x: 0, y: 0 }} >\n                <LocationBox>\n                  <LocationTimeBox>\n                    <LocationTimeText>{duration}</LocationTimeText>\n                    <LocationTimeTextSmall>MIN</LocationTimeTextSmall>\n                  </LocationTimeBox>\n                  <LocationText>User Name</LocationText>\n                </LocationBox>\n              </Marker>\n            </Fragment>\n          )}\n        </MapView>\n        {destination ? (\n          <Fragment>\n            <Back onPress={this.handleBack}>\n              <Image source={backImage} />\n            </Back>\n            <Details parkName={destination.title} parkId={destination.parkId} bookedArea={this.bookedArea} bookedAreaNotAvailable={this.bookedAreaNotAvailable} />\n          </Fragment>\n        ) : (\n            <Search onLocationSelected={this.handleLocationSelected} />\n          )}\n      </View >\n    );\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"script"}